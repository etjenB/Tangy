<div class="col-6 p-2">
    <div class="border p-3" style="background-color:azure" @onclick="() => UpdateSelectedProduct(Product.Name)">
        <h2 class="text-black-50">Product - @Product.Id</h2><hr />
        <input id="favoriteCheckbox-@Product.Id" type="checkbox"  @onchange="FavoriteUpdated"/> <label for="favoriteCheckbox-@Product.Id">Add to Favorite</label><br /><br />
        Name - @Product.Name<br />
        <p>RF from Parent - @FirstFragment @SecondFragment</p>
        Show properties: <input type="checkbox" @bind="Product.IsActive" /><br />
        @if (Product.IsActive)
        {
            @foreach (var pp in Product.ProductProperties)
            {
                <span>@pp.Key - @pp.Value</span>
                <br />
            }
        }
        <br />
        <_EditDeleteButton IsActive="@Product.IsActive"></_EditDeleteButton>
    </div>
</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnUpdateSelectedProduct { get; set; }

    [Parameter]
    public RenderFragment FirstFragment { get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
    }

    private async Task UpdateSelectedProduct(string productName)
    {
        await OnUpdateSelectedProduct.InvokeAsync(productName);
    }
}
